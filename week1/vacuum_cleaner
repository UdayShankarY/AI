class VacuumCleanerAgent:
    def __init__(self):
        # Initialize rooms by asking user for their initial state
        self.rooms = {}
        room_names = ['Room A1', 'Room A2', 'Room B1', 'Room B2']
        for room in room_names:
            while True:
                state = input(f"Is {room} clean or dirty? (enter 'clean' or 'dirty', or 'exit' to quit): ").strip().lower()
                if state == 'exit':
                    print("Exiting program...")
                    exit()
                if state == 'clean':
                    self.rooms[room] = 1
                    break
                elif state == 'dirty':
                    self.rooms[room] = 0
                    break
                else:
                    print("Invalid input. Please enter 'clean', 'dirty', or 'exit'.")

        # Starting location (can be changed or asked)
        self.current_room = 'Room A1'

        # Define adjacency (which rooms can move where)
        self.adjacency = {
            'Room A1': ['Room A2', 'Room B1'],
            'Room A2': ['Room A1', 'Room B2'],
            'Room B1': ['Room A1', 'Room B2'],
            'Room B2': ['Room A2', 'Room B1']
        }

        # Initialize cost counter
        self.cost = 0

    def display_status(self):
        print("\nCurrent Room:", self.current_room)
        print("Room Status:", self.rooms)
        print("Total cost so far:", self.cost)

    def clean_room(self):
        if self.rooms[self.current_room] == 0:
            print(f"\nCleaning {self.current_room}...")
            self.rooms[self.current_room] = 1
            self.cost += 1  # Cleaning cost
            print(f"{self.current_room} is now clean.")
        else:
            print(f"\n{self.current_room} is already clean.")

    def move_to_next_room(self):
        # Show adjacent rooms and ask user where to move
        possible_moves = self.adjacency[self.current_room]
        print(f"\nYou can move to: {', '.join(possible_moves)}")
        while True:
            next_room = input("Enter the room you want to move to (or 'exit' to quit): ").strip()
            if next_room.lower() == 'exit':
                print("Exiting program...")
                exit()
            if next_room in possible_moves:
                self.current_room = next_room
                self.cost += 1  # Moving cost
                print(f"\nMoving to {self.current_room}.")
                break
            else:
                print(f"Invalid move. Please choose from: {', '.join(possible_moves)} or type 'exit' to quit.")

    def are_all_rooms_clean(self):
        return all(status == 1 for status in self.rooms.values())


# Main simulation loop
agent = VacuumCleanerAgent()

while not agent.are_all_rooms_clean():
    agent.display_status()
    user_input = input("Enter action (clean/move/clean and move) or 'exit' to quit: ").lower()
    if user_input == 'exit':
        print("Exiting program...")
        break

    if user_input == 'clean':
        agent.clean_room()
    elif user_input == 'move':
        agent.move_to_next_room()
    elif user_input == 'clean and move':
        agent.clean_room()
        if not agent.are_all_rooms_clean():  # Only move if cleaning didn't finish the task
            agent.move_to_next_room()
    else:
        print("\nInvalid input. Please enter 'clean', 'move', 'clean and move', or 'exit'.")

if agent.are_all_rooms_clean():
    print("\nAll rooms are clean! Simulation finished.")
else:
    print("Program terminated before cleaning all rooms.")

print(f"\nTotal cost of cleaning and moving: {agent.cost}")
